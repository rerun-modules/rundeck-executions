# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Tue Jan 12 15:38:33 PST 2016
#
#/ usage: rundeck-executions:query  --project <> [ --max <20>] [ --offset <0>] [ --begin <>] [ --end <>] [ --adhoc <>] [ --status-filter <>] [ --job-filter <>] [ --user-filter <>] [ --abortedby-filter <>] [ --recent-filter <>] [ --older-filter <>] [ --long <true>] [ --file <>]  --url <${RUNDECK_URL:-}> [ --username <${RUNDECK_USER:-}>] [ --password <${RUNDECK_PASSWORD:-}>] [ --apikey <${RUNDECK_APIKEY:-}>] [ --assert-minimum-results <>] [ --print-file-content <false>] 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
# 
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {

    while (( "$#" > 0 ))
    do
        OPT="$1"
        case "$OPT" in
            --project) rerun_option_check $# $1; PROJECT=$2 ; shift ;;
            --max) rerun_option_check $# $1; MAX=$2 ; shift ;;
            --offset) rerun_option_check $# $1; OFFSET=$2 ; shift ;;
            --begin) rerun_option_check $# $1; BEGIN=$2 ; shift ;;
            --end) rerun_option_check $# $1; END=$2 ; shift ;;
            --adhoc) rerun_option_check $# $1; ADHOC=$2 ; shift ;;
            --status-filter) rerun_option_check $# $1; STATUS_FILTER=$2 ; shift ;;
            --job-filter) rerun_option_check $# $1; JOB_FILTER=$2 ; shift ;;
            --user-filter) rerun_option_check $# $1; USER_FILTER=$2 ; shift ;;
            --abortedby-filter) rerun_option_check $# $1; ABORTEDBY_FILTER=$2 ; shift ;;
            --recent-filter) rerun_option_check $# $1; RECENT_FILTER=$2 ; shift ;;
            --older-filter) rerun_option_check $# $1; OLDER_FILTER=$2 ; shift ;;
            --long) rerun_option_check $# $1; LONG=$2 ; shift ;;
            --file) rerun_option_check $# $1; FILE=$2 ; shift ;;
            --url) rerun_option_check $# $1; URL=$2 ; shift ;;
            --username) rerun_option_check $# $1; USERNAME=$2 ; shift ;;
            --password) rerun_option_check $# $1; PASSWORD=$2 ; shift ;;
            --apikey) rerun_option_check $# $1; APIKEY=$2 ; shift ;;
            --assert-minimum-results) rerun_option_check $# $1; ASSERT_MINIMUM_RESULTS=$2 ; shift ;;
            --print-file-content) rerun_option_check $# $1; PRINT_FILE_CONTENT=$2 ; shift ;;
            # help option
            -|--*?) echo >&2 "unrecognized option: $OPT"
                rerun_option_usage
                exit 2
                ;;
            # end of options, just arguments left
            *)
              break
        esac
        shift
    done

    # Set defaultable options.
    [[ -z "$MAX" ]] && MAX="$(rerun_property_get $RERUN_MODULE_DIR/options/max DEFAULT)"
    [[ -z "$OFFSET" ]] && OFFSET="$(rerun_property_get $RERUN_MODULE_DIR/options/offset DEFAULT)"
    [[ -z "$LONG" ]] && LONG="$(rerun_property_get $RERUN_MODULE_DIR/options/long DEFAULT)"
    [[ -z "$URL" ]] && URL="$(rerun_property_get $RERUN_MODULE_DIR/options/url DEFAULT)"
    [[ -z "$USERNAME" ]] && USERNAME="$(rerun_property_get $RERUN_MODULE_DIR/options/username DEFAULT)"
    [[ -z "$PASSWORD" ]] && PASSWORD="$(rerun_property_get $RERUN_MODULE_DIR/options/password DEFAULT)"
    [[ -z "$PRINT_FILE_CONTENT" ]] && PRINT_FILE_CONTENT="$(rerun_property_get $RERUN_MODULE_DIR/options/print-file-content DEFAULT)"
    # Check required options are set
    [[ -z "$PROJECT" ]] && { echo >&2 "missing required option: --project" ; return 2 ; }
    [[ -z "$URL" ]] && { echo >&2 "missing required option: --url" ; return 2 ; }
    # If option variables are declared exportable, export them.
    export URL
    export USERNAME
    export PASSWORD
    export APIKEY
    #
    return 0
}


# If not already set, initialize the options variables to null.
: ${PROJECT:=}
: ${MAX:=}
: ${OFFSET:=}
: ${BEGIN:=}
: ${END:=}
: ${ADHOC:=}
: ${STATUS_FILTER:=}
: ${JOB_FILTER:=}
: ${USER_FILTER:=}
: ${ABORTEDBY_FILTER:=}
: ${RECENT_FILTER:=}
: ${OLDER_FILTER:=}
: ${LONG:=}
: ${FILE:=}
: ${URL:=}
: ${USERNAME:=}
: ${PASSWORD:=}
: ${APIKEY:=}
: ${ASSERT_MINIMUM_RESULTS:=}
: ${PRINT_FILE_CONTENT:=}


